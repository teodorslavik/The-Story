{"ast":null,"code":"var _jsxFileName = \"/Users/tedy/game/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Room from './Room';\n\nfunction App() {\n  const isEmpty = \" \";\n  const hasPerson = \"@\";\n  const theEnd = \"X\";\n  const path = \"#\";\n  const [gameMap, setGameMap] = useState([[]]);\n  const [actualPositionOfPersonX, setActualPositionOfPersonX] = useState(0);\n  const [actualPositionOfPersonY, setActualPositionOfPersonY] = useState(0);\n  const [gameMapWidth, setGameMapWidth] = useState(undefined);\n  const [gameMapHeight, setGameMapHeight] = useState(undefined);\n  const [positionOfEndX, setPositionOfEndX] = useState(null);\n  const [positionOfEndY, setPositionOfEndY] = useState(null);\n  let napisKonec = \" \"; //   const gamePlanInString = `@########  #\n  //       #    #\n  // ######### ##\n  // ##   #     #\n  // ##   ###X###`;\n\n  const gamePlanInString = `####\n@# X`; //   const gamePlanInString = `#\n  // @`;\n\n  const getContentInGameMap = (whereX, whereY) => {\n    let ret = isEmpty;\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n        if (whereX === cellIndex && whereY === rowIndex) {\n          ret = cellItem;\n        }\n      });\n    });\n    return ret;\n  };\n\n  useEffect(() => {\n    let tempGameMap = gamePlanInString.split(\"\\n\");\n    tempGameMap = tempGameMap.map(rowItem => {\n      return rowItem.split(\"\");\n    }); //    console.log(\"final tempGameMap\", tempGameMap);\n\n    setGameMap(tempGameMap);\n    findPositionOfPersonInGameMapAndSetToState(tempGameMap);\n    let tempHeight = 0;\n    let tempWidth = 0;\n    setGameMapWidth(tempGameMap[0].length);\n    setGameMapHeight(tempGameMap.length);\n    findpostionOfEnd(tempGameMap);\n  }, []); //  console.log(gamePlanInString);\n\n  const findPositionOfPersonInGameMapAndSetToState = gameMap => {\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n        if (cellItem === \"@\") {\n          setActualPositionOfPersonX(cellIndex);\n          setActualPositionOfPersonY(rowIndex);\n        }\n      });\n    });\n  };\n\n  const findpostionOfEnd = gameMap => {\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n        if (cellItem === \"X\") {\n          setPositionOfEndX(cellIndex);\n          setPositionOfEndY(rowIndex);\n          console.log(\"Tu!!!!!!!!!!!!!!!!!\");\n        }\n      });\n    });\n  };\n\n  if (positionOfEndX === actualPositionOfPersonX && positionOfEndY === actualPositionOfPersonY) {\n    console.log(\"Je to tam!!!!!!!!!!\");\n    napisKonec = \"Game Over\";\n  } //  console.log(parseStringToGameMap(gamePlanInString));\n  // console.log(gameMap);\n\n\n  const handleMovePerson = (rowIndexToChecked, cellIndexToChecked, cellItem) => {\n    console.log({\n      rowIndexToChecked,\n      cellIndexToChecked\n    }, isAllowedMove(rowIndexToChecked, cellIndexToChecked, cellItem));\n\n    if (!isAllowedMove(rowIndexToChecked, cellIndexToChecked, cellItem)) {\n      return;\n    }\n    /*\n        setActualPositionOfPersonX(cellIndexToChecked);\n        setActualPositionOfPersonX(rowIndexToChecked);\n        const countingMaxX = gameMap.map((rowItem, rowIndex) => (\n          rowItem.map((cellItem, cellIndex) => {\n            if (cellIndex > rowIndex)\n              return cellIndex;\n    \n          })\n        ));\n    */\n\n\n    setActualPositionOfPersonX(cellIndexToChecked);\n    setActualPositionOfPersonY(rowIndexToChecked);\n    const newGameMap = gameMap.map((rowItem, rowIndex) => rowItem.map((cellItem, cellIndex) => {\n      if (rowIndexToChecked === rowIndex && cellIndexToChecked === cellIndex) {\n        return hasPerson;\n      } else if (cellItem === \"@\") {\n        return \"#\";\n      } else {\n        return cellItem;\n      }\n    }));\n    setGameMap(newGameMap);\n  };\n\n  const handleMoveUp = (e, rowIndexToChecked, cellIndexToChecked) => {\n    e.preventDefault();\n    console.log(\"Jdi nahoru?\", canPersonMoveToUp());\n    setActualPositionOfPersonY(rowIndex - 1);\n  };\n\n  const canPersonMoveToUp = () => {\n    console.log(\"XXXXXX\", getContentInGameMap(actualPositionOfPersonX, actualPositionOfPersonY - 1));\n    return getContentInGameMap(actualPositionOfPersonX, actualPositionOfPersonY - 1) === \"#\" || getContentInGameMap(actualPositionOfPersonX, actualPositionOfPersonY - 1) === \"@\" || getContentInGameMap(actualPositionOfPersonX, actualPositionOfPersonY - 1) === \"X\";\n  };\n\n  const isAllowedMove = (rowIndexToChecked, cellIndexToChecked, cellItem) => {\n    return isAcceptedDirectToMove(rowIndexToChecked, cellIndexToChecked) && (cellItem === \"#\" || cellItem === \"X\");\n  };\n\n  const isAcceptedDirectToMove = (rowIndexToChecked, cellIndexToChecked) => {\n    return (actualPositionOfPersonX - 1 === cellIndexToChecked || actualPositionOfPersonX + 1 === cellIndexToChecked) && actualPositionOfPersonY === rowIndexToChecked || (actualPositionOfPersonY - 1 === rowIndexToChecked || actualPositionOfPersonY + 1 === rowIndexToChecked) && actualPositionOfPersonX === cellIndexToChecked;\n  };\n  /*\n  const isAcceptedToMoveWithArrow = (rowIndexToChecked, cellIndexToChecked, rowIndex, arrowUp, cellItem) => {\n  \n  \n      return (setActualPositionOfPersonY(rowIndex + 1)) (\n          (rowIndex >= 0\n          && (cellItem === \"#\" || cellItem === \"@\" || cellItem === \"X\"))\n        )\n    }\n    //return (<div>aaaaa</div>)\n  */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, \"panacek je na pozici x=\", actualPositionOfPersonX, \", y=\", actualPositionOfPersonY), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, napisKonec), /*#__PURE__*/React.createElement(\"p\", {\n    onClick: handleMoveUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, \"Nahoru\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, gameMap.map((rowItem, rowIndex) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: rowIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 50\n    }\n  }, rowItem.map((cellItem, cellIndex) => /*#__PURE__*/React.createElement(\"td\", {\n    key: cellIndex,\n    onClick: e => handleMovePerson(rowIndex, cellIndex, cellItem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Room, Object.assign({\n    roomItem: {\n      content: cellItem,\n      positionX: cellIndex,\n      positionY: rowIndex\n    }\n  }, {\n    gameMap,\n    gameMapWidth,\n    gameMapHeight\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  })))))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tedy/game/src/App.js"],"names":["React","useState","useEffect","Room","App","isEmpty","hasPerson","theEnd","path","gameMap","setGameMap","actualPositionOfPersonX","setActualPositionOfPersonX","actualPositionOfPersonY","setActualPositionOfPersonY","gameMapWidth","setGameMapWidth","undefined","gameMapHeight","setGameMapHeight","positionOfEndX","setPositionOfEndX","positionOfEndY","setPositionOfEndY","napisKonec","gamePlanInString","getContentInGameMap","whereX","whereY","ret","map","rowItem","rowIndex","cellItem","cellIndex","tempGameMap","split","findPositionOfPersonInGameMapAndSetToState","tempHeight","tempWidth","length","findpostionOfEnd","console","log","handleMovePerson","rowIndexToChecked","cellIndexToChecked","isAllowedMove","newGameMap","handleMoveUp","e","preventDefault","canPersonMoveToUp","isAcceptedDirectToMove","content","positionX","positionY"],"mappings":"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","sourcesContent":["import React,  {useState, useEffect} from 'react';\nimport './App.css';\nimport Room from './Room';\n\n\n\nfunction App() {\n  const isEmpty = \" \";\n  const hasPerson = \"@\";\n  const theEnd = \"X\"\n  const path = \"#\"\n\n  \n  const [gameMap, setGameMap] = useState([[]]);\n  const [actualPositionOfPersonX, setActualPositionOfPersonX] = useState(0);\n  const [actualPositionOfPersonY, setActualPositionOfPersonY] = useState(0);\n  const [gameMapWidth, setGameMapWidth] = useState(undefined);\n  const [gameMapHeight, setGameMapHeight] = useState(undefined);\n  const [positionOfEndX, setPositionOfEndX] = useState(null);\n  const [positionOfEndY, setPositionOfEndY] = useState(null);\n  let napisKonec = \" \";\n\n\n\n//   const gamePlanInString = `@########  #\n//       #    #\n// ######### ##\n// ##   #     #\n// ##   ###X###`;\n\n  const gamePlanInString = `####\n@# X`;\n\n//   const gamePlanInString = `#\n// @`;\n\nconst getContentInGameMap = (whereX, whereY) => {\n   let ret = isEmpty;\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n        if (whereX === cellIndex && whereY === rowIndex){\n          ret = cellItem;\n        }\n      });\n    });\n\n    return ret;\n  }\n\n  useEffect(() => {\n    let tempGameMap = gamePlanInString.split(\"\\n\");\n    tempGameMap = tempGameMap.map(rowItem => {\n      return rowItem.split(\"\");\n    });\n//    console.log(\"final tempGameMap\", tempGameMap);\n    setGameMap(tempGameMap);\n    findPositionOfPersonInGameMapAndSetToState(tempGameMap);\n\n    let tempHeight = 0;\n    let tempWidth = 0;\n    setGameMapWidth(tempGameMap[0].length);\n    setGameMapHeight(tempGameMap.length);\n    findpostionOfEnd(tempGameMap);\n\n  }, []);\n\n//  console.log(gamePlanInString);\n\n  const findPositionOfPersonInGameMapAndSetToState = (gameMap) => {\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n        if(cellItem === \"@\") {\n          setActualPositionOfPersonX(cellIndex);\n          setActualPositionOfPersonY(rowIndex);\n        }\n      });\n    });\n  }\n\n\n  const findpostionOfEnd = (gameMap) => {\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n        if(cellItem === \"X\") {\n          setPositionOfEndX(cellIndex);\n          setPositionOfEndY(rowIndex);\n          console.log(\"Tu!!!!!!!!!!!!!!!!!\")\n        }\n      });\n    });\n  }\n\n  if (positionOfEndX === actualPositionOfPersonX && positionOfEndY === actualPositionOfPersonY){\n    console.log(\"Je to tam!!!!!!!!!!\")\n    napisKonec = \"Game Over\"\n  }\n//  console.log(parseStringToGameMap(gamePlanInString));\n\n\n\n  // console.log(gameMap);\n\n  const handleMovePerson = (rowIndexToChecked, cellIndexToChecked, cellItem) => {\n    \n    console.log({\n      rowIndexToChecked, cellIndexToChecked\n    },\n    isAllowedMove(rowIndexToChecked, cellIndexToChecked, cellItem)\n    );\n\n\n    if(!isAllowedMove(rowIndexToChecked, cellIndexToChecked, cellItem)) {return;}\n/*\n    setActualPositionOfPersonX(cellIndexToChecked);\n    setActualPositionOfPersonX(rowIndexToChecked);\n    const countingMaxX = gameMap.map((rowItem, rowIndex) => (\n      rowItem.map((cellItem, cellIndex) => {\n        if (cellIndex > rowIndex)\n          return cellIndex;\n\n      })\n    ));\n*/\n\n    setActualPositionOfPersonX(cellIndexToChecked);\n    setActualPositionOfPersonY(rowIndexToChecked);\n    const newGameMap = gameMap.map((rowItem, rowIndex) => (\n      rowItem.map((cellItem, cellIndex) => {\n        if(rowIndexToChecked === rowIndex && cellIndexToChecked === cellIndex) {\n          return hasPerson;\n\n          } else if (cellItem === \"@\") {return \"#\"} \n          else  {return cellItem} \n      })\n    ));\n   setGameMap(newGameMap);\n\n  }\n\n  const handleMoveUp = (e, rowIndexToChecked, cellIndexToChecked) => {\n    e.preventDefault();\n    console.log(\"Jdi nahoru?\", canPersonMoveToUp());\n    setActualPositionOfPersonY(rowIndex - 1)\n  }\n\n  const canPersonMoveToUp = () => {\n    console.log(\"XXXXXX\", getContentInGameMap(actualPositionOfPersonX, actualPositionOfPersonY - 1));\n    return (getContentInGameMap(actualPositionOfPersonX, actualPositionOfPersonY - 1) === \"#\"\n      || getContentInGameMap(actualPositionOfPersonX, actualPositionOfPersonY - 1) === \"@\"\n      || getContentInGameMap(actualPositionOfPersonX, actualPositionOfPersonY - 1) === \"X\");\n  }\n\n\n\n  const isAllowedMove = (rowIndexToChecked, cellIndexToChecked, cellItem) => {\n\n    return (\n      isAcceptedDirectToMove(rowIndexToChecked, cellIndexToChecked)\n      && (\n        cellItem === \"#\" || cellItem === \"X\"\n        )\n      );\n  }\n\n  const isAcceptedDirectToMove = (rowIndexToChecked, cellIndexToChecked) => {\n\n    return (\n    (\n        ( actualPositionOfPersonX - 1 === cellIndexToChecked || actualPositionOfPersonX + 1 === cellIndexToChecked )\n        && ( actualPositionOfPersonY === rowIndexToChecked )\n      )\n      || (\n        ( actualPositionOfPersonY - 1 === rowIndexToChecked || actualPositionOfPersonY + 1 === rowIndexToChecked )\n        && ( actualPositionOfPersonX === cellIndexToChecked )\n        )\n  \n      )\n\n  }\n\n\n\n/*\nconst isAcceptedToMoveWithArrow = (rowIndexToChecked, cellIndexToChecked, rowIndex, arrowUp, cellItem) => {\n\n\n    return (setActualPositionOfPersonY(rowIndex + 1)) (\n        (rowIndex >= 0\n        && (cellItem === \"#\" || cellItem === \"@\" || cellItem === \"X\"))\n      )\n  }\n  //return (<div>aaaaa</div>)\n*/\n  return (\n    <div className=\"App\">\n      <p>panacek je na pozici x={actualPositionOfPersonX}, y={actualPositionOfPersonY}</p>\n      <p>{napisKonec}</p>\n      <p onClick={handleMoveUp}>Nahoru</p>\n        <table>\n          <tbody>\n            {gameMap.map((rowItem, rowIndex) => (<tr key={rowIndex}>\n              {rowItem.map((cellItem, cellIndex) => (\n                <td\n                  key={cellIndex}\n                  onClick={e=>handleMovePerson(rowIndex, cellIndex, cellItem)}\n                >\n                  <Room\n                    roomItem={{\n                      content: cellItem,\n                      positionX: cellIndex,\n                      positionY: rowIndex,\n                    }}\n                    {...{gameMap, gameMapWidth, gameMapHeight}}\n                  />\n                </td>\n              ))}\n            </tr>\n            ))}\n          </tbody>\n        </table>\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}