{"ast":null,"code":"var _jsxFileName = \"/Users/tedy/game/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Room from './Room';\n\nfunction App() {\n  const isEmpty = \" \";\n  const hasPerson = \"@\";\n  const theEnd = \"X\";\n  const path = \"#\";\n  const [gameMap, setGameMap] = useState([[]]);\n  const [actualPositionOfPersonX, setActualPositionOfPersonX] = useState(0);\n  const [actualPositionOfPersonY, setActualPositionOfPersonY] = useState(0);\n  const [gameMapWidth, setGameMapWidth] = useState(undefined);\n  const [gameMapHeight, setGameMapHeight] = useState(undefined);\n  const [positionOfEndX, setPositionOfEndX] = useState(undefined);\n  const [positionOfEndY, setPositionOfEndY] = useState(undefined);\n  let napisKonec = \" \"; //   const gamePlanInString = `@########  #\n  //       #    #\n  // ######### ##\n  // ##   #     #\n  // ##   ###X###`;\n\n  const gamePlanInString = `#@##\n## X`;\n  useEffect(() => {\n    let tempGameMap = gamePlanInString.split(\"\\n\");\n    tempGameMap = tempGameMap.map(rowItem => {\n      return rowItem.split(\"\");\n    });\n    console.log(\"final tempGameMap\", tempGameMap);\n    setGameMap(tempGameMap);\n    findPositionOfPersonInGameMapAndSetToState(tempGameMap);\n    let tempHeight = 0;\n    let tempWidth = 0;\n    setGameMapWidth(tempGameMap[0].length);\n    setGameMapHeight(tempGameMap.length);\n  }, []); //  console.log(gamePlanInString);\n\n  const findPositionOfPersonInGameMapAndSetToState = gameMap => {\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n        if (cellItem === \"@\") {\n          setActualPositionOfPersonX(cellIndex);\n          setActualPositionOfPersonY(rowIndex);\n        }\n      });\n    });\n  };\n\n  const findpostionOfEnd = gameMap => {\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n        if (cellItem === \"X\") {\n          setPositionOfEndX(cellIndex);\n          setPositionOfEndY(rowIndex);\n        }\n      });\n    });\n  };\n\n  if (positionOfEndX === actualPositionOfPersonX && positionOfEndY === actualPositionOfPersonY) {\n    napisKonec = \"Game Over\";\n  } //  console.log(parseStringToGameMap(gamePlanInString));\n  // console.log(gameMap);\n\n\n  const handleMovePerson = (rowIndexToChecked, cellIndexToChecked, cellItem) => {\n    console.log({\n      rowIndexToChecked,\n      cellIndexToChecked\n    }, isAllowedMove(rowIndexToChecked, cellIndexToChecked, cellItem));\n\n    if (!isAllowedMove(rowIndexToChecked, cellIndexToChecked, cellItem)) {\n      return;\n    }\n    /*\n        setActualPositionOfPersonX(cellIndexToChecked);\n        setActualPositionOfPersonX(rowIndexToChecked);\n        const countingMaxX = gameMap.map((rowItem, rowIndex) => (\n          rowItem.map((cellItem, cellIndex) => {\n            if (cellIndex > rowIndex)\n              return cellIndex;\n    \n          })\n        ));\n    */\n\n\n    setActualPositionOfPersonX(cellIndexToChecked);\n    setActualPositionOfPersonY(rowIndexToChecked);\n    const newGameMap = gameMap.map((rowItem, rowIndex) => rowItem.map((cellItem, cellIndex) => {\n      if (rowIndexToChecked === rowIndex && cellIndexToChecked === cellIndex) {\n        return hasPerson;\n      } else if (cellItem === \"@\") {\n        return \"#\";\n      } else {\n        return cellItem;\n      }\n    }));\n    setGameMap(newGameMap);\n  };\n\n  const isAllowedMove = (rowIndexToChecked, cellIndexToChecked, cellItem) => {\n    console.log(\"isAcceptedDirectToMove\", isAcceptedDirectToMove(rowIndexToChecked, cellIndexToChecked), \"isGood place\", cellItem === \"#\" || cellItem === \"X\", \"cellItem\", cellItem);\n    return isAcceptedDirectToMove(rowIndexToChecked, cellIndexToChecked) && (cellItem === \"#\" || cellItem === \"X\");\n  };\n\n  const isAcceptedDirectToMove = (rowIndexToChecked, cellIndexToChecked) => {\n    console.log(\"isAcceptedDirectToMove !!!!!\", {\n      rowIndexToChecked,\n      cellIndexToChecked\n    });\n    return (actualPositionOfPersonX - 1 === cellIndexToChecked || actualPositionOfPersonX + 1 === cellIndexToChecked) && actualPositionOfPersonY === rowIndexToChecked || (actualPositionOfPersonY - 1 === rowIndexToChecked || actualPositionOfPersonY + 1 === rowIndexToChecked) && actualPositionOfPersonX === cellIndexToChecked;\n  }; //return (<div>aaaaa</div>)\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, \"panacek je na pozici \", actualPositionOfPersonY, \", \", actualPositionOfPersonX), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, napisKonec), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, gameMap.map((rowItem, rowIndex) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: rowIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 50\n    }\n  }, rowItem.map((cellItem, cellIndex) => /*#__PURE__*/React.createElement(\"td\", {\n    key: cellIndex,\n    onClick: e => handleMovePerson(rowIndex, cellIndex, cellItem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Room, Object.assign({\n    roomItem: {\n      content: cellItem,\n      positionX: cellIndex,\n      positionY: rowIndex\n    }\n  }, {\n    gameMap,\n    gameMapWidth,\n    gameMapHeight\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  })))))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tedy/game/src/App.js"],"names":["React","useState","useEffect","Room","App","isEmpty","hasPerson","theEnd","path","gameMap","setGameMap","actualPositionOfPersonX","setActualPositionOfPersonX","actualPositionOfPersonY","setActualPositionOfPersonY","gameMapWidth","setGameMapWidth","undefined","gameMapHeight","setGameMapHeight","positionOfEndX","setPositionOfEndX","positionOfEndY","setPositionOfEndY","napisKonec","gamePlanInString","tempGameMap","split","map","rowItem","console","log","findPositionOfPersonInGameMapAndSetToState","tempHeight","tempWidth","length","rowIndex","cellItem","cellIndex","findpostionOfEnd","handleMovePerson","rowIndexToChecked","cellIndexToChecked","isAllowedMove","newGameMap","isAcceptedDirectToMove","e","content","positionX","positionY"],"mappings":"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","sourcesContent":["import React,  {useState, useEffect} from 'react';\nimport './App.css';\nimport Room from './Room';\n\n\n\nfunction App() {\n  const isEmpty = \" \";\n  const hasPerson = \"@\";\n  const theEnd = \"X\"\n  const path = \"#\"\n\n  \n  const [gameMap, setGameMap] = useState([[]]);\n  const [actualPositionOfPersonX, setActualPositionOfPersonX] = useState(0);\n  const [actualPositionOfPersonY, setActualPositionOfPersonY] = useState(0);\n  const [gameMapWidth, setGameMapWidth] = useState(undefined);\n  const [gameMapHeight, setGameMapHeight] = useState(undefined);\n  const [positionOfEndX, setPositionOfEndX] = useState(undefined);\n  const [positionOfEndY, setPositionOfEndY] = useState(undefined);\n  let napisKonec = \" \";\n\n\n//   const gamePlanInString = `@########  #\n//       #    #\n// ######### ##\n// ##   #     #\n// ##   ###X###`;\n\n  const gamePlanInString = `#@##\n## X`;\n\n\n\n  useEffect(() => {\n    let tempGameMap = gamePlanInString.split(\"\\n\");\n    tempGameMap = tempGameMap.map(rowItem => {\n      return rowItem.split(\"\");\n    });\n    console.log(\"final tempGameMap\", tempGameMap);\n    setGameMap(tempGameMap);\n    findPositionOfPersonInGameMapAndSetToState(tempGameMap);\n\n    let tempHeight = 0;\n    let tempWidth = 0;\n    setGameMapWidth(tempGameMap[0].length);\n    setGameMapHeight(tempGameMap.length);\n\n  }, []);\n\n//  console.log(gamePlanInString);\n\n  const findPositionOfPersonInGameMapAndSetToState = (gameMap) => {\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n        if(cellItem === \"@\") {\n          setActualPositionOfPersonX(cellIndex);\n          setActualPositionOfPersonY(rowIndex);\n        }\n      });\n    });\n  }\n\n\n  const findpostionOfEnd = (gameMap) => {\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n        if(cellItem === \"X\") {\n          setPositionOfEndX(cellIndex);\n          setPositionOfEndY(rowIndex);\n          \n        }\n      });\n    });\n  }\n\n  if (positionOfEndX === actualPositionOfPersonX && positionOfEndY === actualPositionOfPersonY){\n  napisKonec = \"Game Over\"\n  }\n//  console.log(parseStringToGameMap(gamePlanInString));\n\n\n\n  // console.log(gameMap);\n\n  const handleMovePerson = (rowIndexToChecked, cellIndexToChecked, cellItem) => {\n    \n    console.log({\n      rowIndexToChecked, cellIndexToChecked\n    },\n    isAllowedMove(rowIndexToChecked, cellIndexToChecked, cellItem)\n    );\n\n\n    if(!isAllowedMove(rowIndexToChecked, cellIndexToChecked, cellItem)) {return;}\n/*\n    setActualPositionOfPersonX(cellIndexToChecked);\n    setActualPositionOfPersonX(rowIndexToChecked);\n    const countingMaxX = gameMap.map((rowItem, rowIndex) => (\n      rowItem.map((cellItem, cellIndex) => {\n        if (cellIndex > rowIndex)\n          return cellIndex;\n\n      })\n    ));\n*/\n\n    setActualPositionOfPersonX(cellIndexToChecked);\n    setActualPositionOfPersonY(rowIndexToChecked);\n    const newGameMap = gameMap.map((rowItem, rowIndex) => (\n      rowItem.map((cellItem, cellIndex) => {\n        if(rowIndexToChecked === rowIndex && cellIndexToChecked === cellIndex) {\n          return hasPerson;\n\n          } else if (cellItem === \"@\") {return \"#\"} \n          else  {return cellItem} \n      })\n    ));\n   setGameMap(newGameMap);\n\n  }\n\n\n\n\n  const isAllowedMove = (rowIndexToChecked, cellIndexToChecked, cellItem) => {\n    console.log(\n      \"isAcceptedDirectToMove\", isAcceptedDirectToMove(rowIndexToChecked, cellIndexToChecked),\n      \"isGood place\", cellItem === \"#\" || cellItem === \"X\",\n      \"cellItem\", cellItem,\n      );\n\n    return (\n      isAcceptedDirectToMove(rowIndexToChecked, cellIndexToChecked)\n      && (\n        cellItem === \"#\" || cellItem === \"X\"\n        )\n      );\n  }\n\n  const isAcceptedDirectToMove = (rowIndexToChecked, cellIndexToChecked) => {\n    console.log(\"isAcceptedDirectToMove !!!!!\", {rowIndexToChecked, cellIndexToChecked});\n\n    return (\n    (\n        ( actualPositionOfPersonX - 1 === cellIndexToChecked || actualPositionOfPersonX + 1 === cellIndexToChecked )\n        && ( actualPositionOfPersonY === rowIndexToChecked )\n      )\n      || (\n        ( actualPositionOfPersonY - 1 === rowIndexToChecked || actualPositionOfPersonY + 1 === rowIndexToChecked )\n        && ( actualPositionOfPersonX === cellIndexToChecked )\n        )\n  \n      )\n\n  }\n\n\n  //return (<div>aaaaa</div>)\n\n  return (\n    <div className=\"App\">\n      <p>panacek je na pozici {actualPositionOfPersonY}, {actualPositionOfPersonX}</p>\n      <p>{napisKonec}</p>\n        <table>\n          <tbody>\n            {gameMap.map((rowItem, rowIndex) => (<tr key={rowIndex}>\n              {rowItem.map((cellItem, cellIndex) => (\n                <td\n                  key={cellIndex}\n                  onClick={e=>handleMovePerson(rowIndex, cellIndex, cellItem)}\n                >\n                  <Room\n                    roomItem={{\n                      content: cellItem,\n                      positionX: cellIndex,\n                      positionY: rowIndex,\n                    }}\n                    {...{gameMap, gameMapWidth, gameMapHeight}}\n                  />\n                </td>\n              ))}\n            </tr>\n            ))}\n          </tbody>\n        </table>\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}