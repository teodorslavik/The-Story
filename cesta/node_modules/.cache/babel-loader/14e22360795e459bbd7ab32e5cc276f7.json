{"ast":null,"code":"var _jsxFileName = \"/Users/tedy/game/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const isEmpty = \"o\";\n  const hasPerson = \"x\";\n  const theEnd = \".\";\n  const highestCoordsX = 0;\n  const highestCoordsY = 0;\n  const [gameMap, setGameMap] = useState([[]]);\n  const gamePlanInString = `\n@##########  #\n#   #   #    #\n########### ##\n#  #   #     #\n## #   ###X###\n`; //  console.log(gamePlanInString);\n\n  const [actualPositionOfPersonX, setActualPositionOfPersonX] = useState(0);\n  const [actualPositionOfPersonY, setActualPositionOfPersonY] = useState(0);\n\n  const parseStringToGameMap = gamePlanInString => {\n    let rows = gamePlanInString.split(\"\\n\"); // console.log(\"rows\", rows);\n\n    rows = rows.map(rowItem => {\n      console.log(\"rowItem\", rowItem, rowItem.split(\"\"));\n      return rowItem.split(\"\");\n      return;\n      rowItem.split(\"\").map(cellItem => {\n        if (cellItem === \" \") {\n          return isEmpty;\n        } else if (cellItem === \"@\") {\n          return hasPerson;\n        } else if (cellItem === \"#\") {\n          return isEmpty;\n        } else if (cellItem === \"X\") {\n          return theEnd;\n        } else {\n          return null;\n        }\n      });\n    });\n    console.log(\"final rows\", rows);\n    setGameMap(rows);\n    return [];\n  };\n\n  parseStringToGameMap(gamePlanInString); //  console.log(parseStringToGameMap(gamePlanInString));\n  // console.log(gameMap);\n\n  const handleMovePerson = (rowIndexToChecked, cellIndexToChecked) => {\n    if (!isAllowedMove(rowIndexToChecked, cellIndexToChecked)) {\n      return;\n    }\n    /*\n        setActualPositionOfPersonX(cellIndexToChecked);\n        setActualPositionOfPersonX(rowIndexToChecked);\n        const countingMaxX = gameMap.map((rowItem, rowIndex) => (\n          rowItem.map((cellItem, cellIndex) => {\n            if (cellIndex > rowIndex)\n              return cellIndex;\n    \n          })\n        ));\n    */\n\n\n    setActualPositionOfPersonX(cellIndexToChecked);\n    setActualPositionOfPersonY(rowIndexToChecked);\n    const test = gameMap.map((rowItem, rowIndex) => rowItem.map((cellItem, cellIndex) => {\n      if (rowIndexToChecked === rowIndex && cellIndexToChecked === cellIndex) {\n        return hasPerson;\n      } else {\n        return isEmpty;\n      }\n    }));\n    setGameMap(test);\n  };\n\n  const isAllowedMove = (rowIndexToChecked, cellIndexToChecked) => {\n    return (actualPositionOfPersonX - 1 === cellIndexToChecked || actualPositionOfPersonX + 1 === cellIndexToChecked) && actualPositionOfPersonY === rowIndexToChecked || (actualPositionOfPersonY - 1 === rowIndexToChecked || actualPositionOfPersonY + 1 === rowIndexToChecked) && actualPositionOfPersonX === cellIndexToChecked;\n  }; //return (<div>aaaaa</div>)\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"panacek je na pozici \", actualPositionOfPersonY, \", \", actualPositionOfPersonX), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, gameMap.map((rowItem, rowIndex) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: rowIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 50\n    }\n  }, rowItem.map((cellItem, cellIndex) => /*#__PURE__*/React.createElement(\"td\", {\n    key: cellIndex,\n    onClick: e => handleMovePerson(rowIndex, cellIndex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, cellItem, \"-\", rowIndex, \",\", cellIndex)))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tedy/game/src/App.js"],"names":["React","useState","App","isEmpty","hasPerson","theEnd","highestCoordsX","highestCoordsY","gameMap","setGameMap","gamePlanInString","actualPositionOfPersonX","setActualPositionOfPersonX","actualPositionOfPersonY","setActualPositionOfPersonY","parseStringToGameMap","rows","split","map","rowItem","console","log","cellItem","handleMovePerson","rowIndexToChecked","cellIndexToChecked","isAllowedMove","test","rowIndex","cellIndex","e"],"mappings":"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","sourcesContent":["import React,  {useState} from 'react';\nimport './App.css';\n\nfunction App() {\n  const isEmpty = \"o\";\n  const hasPerson = \"x\";\n  const theEnd = \".\"\n  const highestCoordsX = 0\n  const highestCoordsY = 0\n\n  const [gameMap, setGameMap] = useState([[]]);\n\n  const gamePlanInString = `\n@##########  #\n#   #   #    #\n########### ##\n#  #   #     #\n## #   ###X###\n`;\n\n\n//  console.log(gamePlanInString);\n\n  const [actualPositionOfPersonX, setActualPositionOfPersonX] = useState(0);\n  const [actualPositionOfPersonY, setActualPositionOfPersonY] = useState(0);\n\n\n  const parseStringToGameMap = (gamePlanInString) => {\n\n    let rows = gamePlanInString.split(\"\\n\");\n    // console.log(\"rows\", rows);\n    rows = rows.map(rowItem => {\n      console.log(\"rowItem\", rowItem, rowItem.split(\"\"));\n\n      return rowItem.split(\"\");\n\n      return \n        rowItem.split(\"\")\n        .map(cellItem => {\n          if (cellItem === \" \") {return isEmpty}\n          else if (cellItem === \"@\") {return hasPerson}\n          else if (cellItem === \"#\") {return isEmpty}\n          else if (cellItem === \"X\") {return theEnd}\n          else {return null}\n        });\n    \n\n    });\n\n\n    console.log(\"final rows\", rows);\n    setGameMap(rows);\n    return [];\n  }\n\n\n  parseStringToGameMap(gamePlanInString);\n\n//  console.log(parseStringToGameMap(gamePlanInString));\n\n\n\n  // console.log(gameMap);\n\n  const handleMovePerson = (rowIndexToChecked, cellIndexToChecked) => {\n    if(!isAllowedMove(rowIndexToChecked, cellIndexToChecked)) {return;}\n/*\n    setActualPositionOfPersonX(cellIndexToChecked);\n    setActualPositionOfPersonX(rowIndexToChecked);\n    const countingMaxX = gameMap.map((rowItem, rowIndex) => (\n      rowItem.map((cellItem, cellIndex) => {\n        if (cellIndex > rowIndex)\n          return cellIndex;\n\n      })\n    ));\n*/\n\n    setActualPositionOfPersonX(cellIndexToChecked);\n    setActualPositionOfPersonY(rowIndexToChecked);\n    const test = gameMap.map((rowItem, rowIndex) => (\n      rowItem.map((cellItem, cellIndex) => {\n        if(rowIndexToChecked === rowIndex && cellIndexToChecked === cellIndex) {\n          return hasPerson;\n          } else {return isEmpty}\n      })\n    ));\n   setGameMap(test);\n\n  }\n\n\n\n\n  const isAllowedMove = (rowIndexToChecked, cellIndexToChecked) => {\n    return (\n      (\n        ( actualPositionOfPersonX - 1 === cellIndexToChecked || actualPositionOfPersonX + 1 === cellIndexToChecked )\n        && ( actualPositionOfPersonY === rowIndexToChecked )\n      )\n      || (\n        ( actualPositionOfPersonY - 1 === rowIndexToChecked || actualPositionOfPersonY + 1 === rowIndexToChecked )\n        && ( actualPositionOfPersonX === cellIndexToChecked )\n        )\n      );\n  }\n\n\n\n  //return (<div>aaaaa</div>)\n\n  return (\n    <div className=\"App\">\n      <p>panacek je na pozici {actualPositionOfPersonY}, {actualPositionOfPersonX}</p>\n        <table>\n          <tbody>\n            {gameMap.map((rowItem, rowIndex) => (<tr key={rowIndex}>\n              {rowItem.map((cellItem, cellIndex) => (\n                <td\n                  key={cellIndex}\n                  onClick={e=>handleMovePerson(rowIndex, cellIndex)}\n                  >\n                    {cellItem}-{rowIndex},{cellIndex}\n                </td>\n              ))}\n            </tr>\n            ))}\n          </tbody>\n        </table>\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}