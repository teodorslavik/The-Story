{"ast":null,"code":"var _jsxFileName = \"/Users/tedy/game/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const isEmpty = \"o\";\n  const hasPerson = \"x\";\n  const [gameMap, setGameMap] = useState([[hasPerson, isEmpty, isEmpty], [isEmpty, isEmpty, isEmpty], [isEmpty, isEmpty, isEmpty], [isEmpty, isEmpty, isEmpty]]);\n  const [actualPositionOfPersonX, setActualPositionOfPersonX] = useState(0);\n  const [actualPositionOfPersonY, setActualPositionOfPersonY] = useState(0); // console.log(gameMap);\n\n  const handleMovePerson = (rowIndexToChecked, cellIndexToChecked) => {\n    // tady bude check ze nejdem moc daleko\n    // const mocDaleko = true;\n    // if(mocDaleko) {return;}\n    const a = 2;\n    const b = 5; //if (a - 2 < 5) {\n    //  console.log(\"AOIOIOOOOOOOOO\");\n    //}\n\n    if ( //rowIndex = actualPositionOfPersonX - 1 or actualPositionOfPersonX + 1 or cellIndex = actualPositionOfPersonY - 1 or actualPositionOfPersonY + 1\n    (actualPositionOfPersonX - 1 === cellIndexToChecked || actualPositionOfPersonX + 1 === cellIndexToChecked) && actualPositionOfPersonY === rowIndexToChecked || (actualPositionOfPersonY - 1 === rowIndexToChecked || actualPositionOfPersonY + 1 === rowIndexToChecked) && actualPositionOfPersonX === cellIndexToChecked) {\n      setActualPositionOfPersonX(cellIndexToChecked);\n      setActualPositionOfPersonY(rowIndexToChecked);\n      const test = gameMap.map((rowItem, rowIndex) => rowItem.map((cellItem, cellIndex) => {\n        console.log(cellItem, cellIndex, rowIndex);\n\n        if (rowIndexToChecked === rowIndex && cellIndexToChecked === cellIndex) {\n          return hasPerson;\n        } else {\n          return isEmpty;\n        }\n      }));\n      setGameMap(test);\n    } else {\n      return;\n    } // console.log(\"TEST\", test);\n    // console.log(\"AAAAAAAAAAA\", rowIndex, cellIndex, gameMap);\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"panacek je na pozici \", actualPositionOfPersonY, \", \", actualPositionOfPersonX), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, gameMap.map((rowItem, rowIndex) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: rowIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 46\n    }\n  }, console.log({\n    rowItem\n  }), rowItem.map((cellItem, cellIndex) => /*#__PURE__*/React.createElement(\"td\", {\n    key: cellIndex,\n    onClick: e => handleMovePerson(rowIndex, cellIndex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, cellItem, \"-\", rowIndex, \",\", cellIndex)))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tedy/game/src/App.js"],"names":["React","useState","App","isEmpty","hasPerson","gameMap","setGameMap","actualPositionOfPersonX","setActualPositionOfPersonX","actualPositionOfPersonY","setActualPositionOfPersonY","handleMovePerson","rowIndexToChecked","cellIndexToChecked","a","b","test","map","rowItem","rowIndex","cellItem","cellIndex","console","log","e"],"mappings":"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","sourcesContent":["import React,  {useState} from 'react';\nimport './App.css';\n\nfunction App() {\n  const isEmpty = \"o\";\n  const hasPerson = \"x\";\n\n  const [gameMap, setGameMap] = useState(\n    [\n    [hasPerson, isEmpty, isEmpty],\n    [isEmpty, isEmpty, isEmpty],\n    [isEmpty, isEmpty, isEmpty],\n    [isEmpty, isEmpty, isEmpty],\n   ]\n  );\n\n  const [actualPositionOfPersonX, setActualPositionOfPersonX] = useState(0);\n  const [actualPositionOfPersonY, setActualPositionOfPersonY] = useState(0);\n\n  // console.log(gameMap);\n\n  const handleMovePerson = (rowIndexToChecked, cellIndexToChecked) => {\n    // tady bude check ze nejdem moc daleko\n    // const mocDaleko = true;\n    // if(mocDaleko) {return;}\n\n    const a = 2;\n    const b = 5;\n    //if (a - 2 < 5) {\n    //  console.log(\"AOIOIOOOOOOOOO\");\n    //}\n\n    if (\n      //rowIndex = actualPositionOfPersonX - 1 or actualPositionOfPersonX + 1 or cellIndex = actualPositionOfPersonY - 1 or actualPositionOfPersonY + 1\n        ((\n                  actualPositionOfPersonX - 1 === cellIndexToChecked\n                  || actualPositionOfPersonX + 1 === cellIndexToChecked\n                )\n                && (\n                   actualPositionOfPersonY === rowIndexToChecked\n                ))\n        ||((\n                  actualPositionOfPersonY - 1 === rowIndexToChecked\n                  || actualPositionOfPersonY + 1 === rowIndexToChecked\n                  )\n                &&(\n                  actualPositionOfPersonX === cellIndexToChecked          \n                  ))\n      ){\n        setActualPositionOfPersonX(cellIndexToChecked);\n        setActualPositionOfPersonY(rowIndexToChecked);\n        const test = gameMap.map((rowItem, rowIndex) => (\n          rowItem.map((cellItem, cellIndex) => {\n            console.log(cellItem, cellIndex, rowIndex);\n            if(rowIndexToChecked === rowIndex && cellIndexToChecked === cellIndex) {\n              return hasPerson;\n              } else {return isEmpty}\n          })\n        ));\n     setGameMap(test);\n \n    }else{return}\n\n    // console.log(\"TEST\", test);\n\n\n\n    // console.log(\"AAAAAAAAAAA\", rowIndex, cellIndex, gameMap);\n  }\n\n  return (\n    <div className=\"App\">\n      <p>panacek je na pozici {actualPositionOfPersonY}, {actualPositionOfPersonX}</p>\n        <table>\n          <tbody>\n        {gameMap.map((rowItem, rowIndex) => (<tr key={rowIndex}>\n          {console.log({rowItem})}\n          {rowItem.map((cellItem, cellIndex) => (\n            <td\n              key={cellIndex}\n              onClick={e=>handleMovePerson(rowIndex, cellIndex)}\n              >\n                {cellItem}-{rowIndex},{cellIndex}\n            </td>\n          ))}\n        </tr>\n        ))}\n          </tbody>\n        </table>\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}