{"version":3,"sources":["Room.js","PreviewMap.js","ActionMap.js","Intro.js","App.js","serviceWorker.js","index.js"],"names":["HorizontalWithoutDoor","HorizontalWithDoor","VerticalWithoutDoor","VerticalWithDoor","PlayerInRoom","PlayerIsNotInRoom","NotRoom","TreasureRoom","Room","roomItem","gameMap","gameMapWidth","gameMapHeight","northRoomPositionX","positionX","northRoomPositionY","positionY","southRoomPositionX","southRoomPositionY","eastRoomPositionX","eastRoomPositionY","westRoomPositionX","westRoomPositionY","hasDoorInNorth","hasDoorInSouth","hasDoorInEast","hasDoorInWest","isRoom","content","map","rowItem","rowIndex","cellItem","cellIndex","className","style","display","PreviewMap","props","handleMovePerson","setGameModeToGame","setPrewiewMode","prewiewMode","useEffect","timer","setTimeout","clearTimeout","key","onClick","e","ActionMap","levelIndex","actualPositionOfPersonX","actualPositionOfPersonY","Intro","setGameModeToPreview","App","useState","setGameMap","setActualPositionOfPersonX","setActualPositionOfPersonY","undefined","setGameMapWidth","setGameMapHeight","positionOfEndX","setPositionOfEndX","positionOfEndY","setPositionOfEndY","setLevelIndex","gameMode","setGameMode","showGameRestartButton","setShowGameRestartButton","lastLevelIndex","signNextLevel","gameArrayPlans","console","log","getContentInGameMap","whereX","whereY","ret","loadActualLevel","tempGameMap","split","length","findpostionOfEnd","findPositionOfPersonInGameMapAndSetToState","rowIndexToChecked","cellIndexToChecked","isAllowedMove","newGameMap","pr","isAcceptedDirectToMove","document","querySelector","play","keyName","onKeyDown","href","src","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.194007e7.chunk.js","sourcesContent":["import React from 'react';\n\t\nimport './App.css';\n\nfunction Room({roomItem, gameMap, gameMapWidth, gameMapHeight}) {\n\n\t// zjistit vlastnosti mistnost\n\t// kde jsou dvere?\n\nconst northRoomPositionX = roomItem.positionX;\nconst northRoomPositionY = roomItem.positionY - 1;\n\nconst southRoomPositionX = roomItem.positionX;\nconst southRoomPositionY = roomItem.positionY + 1;\n\nconst eastRoomPositionX = roomItem.positionX + 1;\nconst eastRoomPositionY = roomItem.positionY;\n\nconst westRoomPositionX = roomItem.positionX - 1;\nconst westRoomPositionY = roomItem.positionY;\n\n\n\t// console.log({roomItem, gameMap, gameMapHeight, gameMapWidth});\n\n\n\n\tlet hasDoorInNorth = false;\n\tlet hasDoorInSouth = false;\n\tlet hasDoorInEast = false;\n\tlet hasDoorInWest = false;\n\t\n\t\n\tconst imRoomAndSetToMeDoors = () => {\n\t\tgameMap.map((rowItem, rowIndex) => {\n\t\t\trowItem.map((cellItem, cellIndex) => {\n\t\t\t\tif (\n\t\t\t\t\trowIndex === northRoomPositionY\n\t\t\t\t\t&& cellIndex === northRoomPositionX\n\t\t\t\t\t&& isRoom(cellItem)\n\t\t\t\t\t&& rowIndex >= 0\n\t\t\t\t){\n\t\t\t\t\thasDoorInNorth = true;\n\t\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\trowIndex === southRoomPositionY\n\t\t\t\t\t&& cellIndex === southRoomPositionX\n\t\t\t\t\t&& isRoom(cellItem) \n\t\t\t\t\t&& rowIndex <= gameMapHeight\n\t\t\t\t){\n\t\t\t\t\thasDoorInSouth = true;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\trowIndex === eastRoomPositionY\n\t\t\t\t\t&& cellIndex === eastRoomPositionX\n\t\t\t\t\t&& isRoom(cellItem)\n\t\t\t\t\t&& cellIndex <= gameMapWidth\n\t\t\t\t){\n\t\t\t\t\thasDoorInEast = true;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\trowIndex === westRoomPositionY\n\t\t\t\t\t&& cellIndex === westRoomPositionX\n\t\t\t\t\t&& isRoom(cellItem)\n\t\t\t\t\t&& cellIndex >= 0\n\t\t\t\t){\n\t\t\t\t\thasDoorInWest = true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t}\n\n\tconst isRoom = (content) => {\n\t\tif(content !== \" \") {\n\t\t\treturn true\n\t\t} else { return false}\n\t};\n\n\tif(roomItem.content === \"#\" || roomItem.content === \"@\" || roomItem.content === \"X\") {imRoomAndSetToMeDoors()}\n\telse {}\n\t\n\t\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"noWrap\">\n\t\t\t\t{hasDoorInNorth ? <HorizontalWithDoor /> : <HorizontalWithoutDoor />}\n\t\t\t</div>\n\t\t\t<div style={{display: \"flex\", }}>\n\t\t\t\t<span className=\"noWrap\">\n\t\t\t\t\t{hasDoorInWest ? <VerticalWithDoor /> : <VerticalWithoutDoor />}\n\t\t\t\t</span>\n\t\t\t\t<span className=\"noWrap\">\n\t\t\t\t\t{\n\t\t\t\t\t\t(roomItem.content === \"@\") ? <PlayerInRoom /> \n\t\t\t\t\t\t: (roomItem.content === \"#\") ? <PlayerIsNotInRoom />\n\t\t\t\t\t\t: (roomItem.content === \"X\") ? <TreasureRoom />\n\t\t\t\t\t\t: <NotRoom />\n\t\t\t\t\t}\n\t\t\t\t</span>\n\t\t\t\t<span className=\"noWrap\">\n\t\t\t\t\t{hasDoorInEast ? <VerticalWithDoor /> : <VerticalWithoutDoor />}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{hasDoorInSouth ? <HorizontalWithDoor /> : <HorizontalWithoutDoor />}\n\t\t\t</div>\n{/*\n\t\t\t{roomItem.content},<br />\n\t\t\tpozice mistnosti: {roomItem.positionX}, {roomItem.positionY}<br />\n\t\t\tpozice mistnosti na severu: {northRoomPositionX}, {northRoomPositionY}<br />\n\t\t\t<strong>mam na severu dvere? {hasDoorInNorth ? <span>ano</span> : <span>ne</span>}</strong><br />\n\t\t\tmam na jihu dvere? {hasDoorInSouth ? <span>ano</span> : <span>ne</span>}<br />\n\t\t\tmam na vychodu dvere? {hasDoorInEast ? <span>ano</span> : <span>ne</span>}<br />\n\t\t\tmam na zapade dvere? {hasDoorInWest ? <span>ano</span> : <span>ne</span>}\n*/}\n\n\t\t</div>\n\n\t)\n\n}\n\nfunction HorizontalWithoutDoor (){\n\treturn (<>###############</>);\n}\nfunction HorizontalWithDoor (){\n\treturn (<>#####<em>.....</em>#####</>);\n}\nfunction VerticalWithoutDoor (){\n\treturn (<>#<br />\n#<br />\n#<br />\n#<br />\n#</>);\n}\nfunction VerticalWithDoor (){\n\treturn (<>#<br />\n<em>.<br />\n.<br />\n.</em><br />\n#</>);\n}\nfunction PlayerInRoom (){\n\treturn (<><em>.............</em><br />     \n<em>......</em>o<em>......</em><br />\n<em>.....</em>-|-<em>.....</em><br />\n<em>.....</em>/<em>.</em>\\<em>.....</em><br />\n<em>.............</em></>);\n}\nfunction PlayerIsNotInRoom (){\n\treturn (<><em>.............<br />\n.............<br />\n.............<br />\n.............<br />\n.............</em></>);\n}\nfunction NotRoom (){\n\treturn (<>#############<br />     \n#############<br />\n#############<br />\n#############<br />\n#############</>);\n}\nfunction TreasureRoom (){\n\treturn (<><em>.............</em><br />     \n<em>.....</em>xxx<em>.....</em><br />\n<em>.....</em>xXx<em>.....</em><br />\n<em>.....</em>xxx<em>.....</em><br />\n<em>.............</em></>);\n}\n\n\n\n\t\nexport default Room;","import React,  {useState, useEffect} from 'react';\nimport Room from './Room';\n\n\nfunction PreviewMap(props) {\n\n\tconst gameMap = props.gameMap;\n\tconst handleMovePerson = props.handleMovePerson;\n\tconst gameMapWidth = props.gameMapWidth;\n\tconst gameMapHeight = props.gameMapHeight;\n\tconst setPrewiewMode = props.setPrewiewMode\n\tconst prewiewMode = props.prewiewMode\n\tconst setGameModeToGame = props.setGameModeToGame\n//\t        <button onClick={handleChangeToActionMap}>ZAČÍT</button>\n\n\nuseEffect(() => {\n   const timer = setTimeout(() => {\n\tsetGameModeToGame();\n   }, 2000);\n   return () => clearTimeout(timer);\n  }, []);\n\n\n\n\treturn (\n\t\t<div>\n\t        <table>\n\t          <tbody>\n\t            {gameMap.map((rowItem, rowIndex) => (<tr key={rowIndex}>\n\t              {rowItem.map((cellItem, cellIndex) => (\n\t                <td\n\t                  key={cellIndex}\n\t                  onClick={e=>handleMovePerson(rowIndex, cellIndex, cellItem)}\n\t                >\n\t                  <Room\n\t                    roomItem={{\n\t                      content: cellItem,\n\t                      positionX: cellIndex,\n\t                      positionY: rowIndex,\n\t                    }}\n\t                    {...{gameMap, gameMapWidth, gameMapHeight}}\n\t                  />\n\t                </td>\n\t              ))}\n\t            </tr>\n\t            ))}\n\t          </tbody>\n\t        </table>\n\t        <button onClick={setGameModeToGame}>ZAČÍT</button>\n\n    \t</div>\n\t);\n}\n\nexport default PreviewMap;","import React,  {useState, useEffect} from 'react';\nimport Room from './Room';\n\nfunction ActionMap(props) {\n  const levelIndex = props.levelIndex;\n  const gameMap = props.gameMap;\n  const actualPositionOfPersonX = props.actualPositionOfPersonX;  \n  const actualPositionOfPersonY = props.actualPositionOfPersonY;\n  const gameMapWidth = props.gameMapWidth;\n  const gameMapHeight = props.gameMapHeight;\n\n\n  return (<>\n\t   <p><strong>Bludiště {levelIndex + 1}</strong></p>\n      {gameMap.map((rowItem, rowIndex) => (<div key={rowIndex}>\n        {rowItem.map((cellItem, cellIndex) => (\n          (actualPositionOfPersonX === cellIndex && actualPositionOfPersonY === rowIndex)\n          ? \n            <Room\n              key={cellIndex}\n              roomItem={{\n                content: cellItem,\n                positionX: cellIndex,\n                positionY: rowIndex,\n              }}\n              {...{gameMap, gameMapWidth, gameMapHeight}}\n            />\n\n          : null\n        ))}\n\n\n      </div>   \n      ))}\n\n    </>);\n}\n\n\nexport default ActionMap;\n\n\n\n/*\n\n      {gameMap.map((rowItem, rowIndex) => (<div key={rowIndex}>\n        {rowItem.map((cellItem, cellIndex) => (\n          (actualPositionOfPersonX === cellIndex && actualPositionOfPersonY === rowIndex)\n          ? \n            <Room\n              key={cellIndex}\n              roomItem={{\n                content: cellItem,\n                positionX: cellIndex,\n                positionY: rowIndex,\n              }}\n              {...{gameMap, gameMapWidth, gameMapHeight}}\n            />\n\n          : null\n        ))}\n\n*/","import React,  {useState, useEffect} from 'react';\nimport Room from './Room';\n\nfunction Intro(props) {\n\tconst levelIndex = props.levelIndex;\n\tconst setGameModeToPreview = props.setGameModeToPreview;\n\n\n\treturn(\n\t\t<div>\n\t\t\t<p>Zmáčkni START pro začátek hry</p>\n\t\t\t<p>Level {levelIndex + 1}</p>\n\t\t\t<button onClick={setGameModeToPreview}>START</button>\n\t\t</div>\n\t\t);\n}\n\nexport default Intro;","import React,  {useState, useEffect} from 'react';\nimport './App.css';\nimport Room from './Room';\nimport PreviewMap from './PreviewMap';\nimport ActionMap from './ActionMap';\nimport Intro from './Intro';\n\nimport Hotkeys from 'react-hot-keys';\n\n\nconst GAME_MODE_INTRO = \"INTRO\"; // zobrazeni informaci a play tlacitka\nconst GAME_MODE_PREVIEW = \"PREVIEW\"; // zobrazeni cele mapy\nconst GAME_MODE_GAME = \"GAME\"; // samotna hra\n\nfunction App() {\n  const isEmpty = \" \";\n  const hasPerson = \"@\";\n  const theEnd = \"X\"\n  const path = \"#\"\n\n  \n  const [gameMap, setGameMap] = useState([[]]);\n  const [actualPositionOfPersonX, setActualPositionOfPersonX] = useState(0);\n  const [actualPositionOfPersonY, setActualPositionOfPersonY] = useState(0);\n  const [gameMapWidth, setGameMapWidth] = useState(undefined);\n  const [gameMapHeight, setGameMapHeight] = useState(undefined);\n  const [positionOfEndX, setPositionOfEndX] = useState(null);\n  const [positionOfEndY, setPositionOfEndY] = useState(null);\n  const [levelIndex, setLevelIndex] = useState(0);\n//  const [previewMode, setPreviewMode] = useState(true);\n  const [gameMode, setGameMode] = useState(GAME_MODE_PREVIEW);\n  const [showGameRestartButton, setShowGameRestartButton] = useState(false);\n  const [lastLevelIndex, setLastLevelIndex] = useState(3);\n  let gameOverSign = \" \";\n  let signNextLevel = \" \";\n\n\nconst gameArrayPlans = [\n`##@\n# X`,\n`@# ###\n#### X`,\n`@`\n];\n\n\nconsole.log({gameMap});\nconst getContentInGameMap = (whereX, whereY) => {\n   let ret = isEmpty;\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n        if (whereX === cellIndex && whereY === rowIndex){\n          ret = cellItem;\n        }\n      });\n    });\n\n    return ret;\n  }\n    const findpostionOfEnd = (gameMap) => {\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n\n        if(cellItem === \"X\") {\n          setPositionOfEndX(cellIndex);\n          setPositionOfEndY(rowIndex);\n        }\n      });\n    });\n  }\n\n\n  const findPositionOfPersonInGameMapAndSetToState = (gameMap) => {\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n        if(cellItem === \"@\") {\n          setActualPositionOfPersonX(cellIndex);\n          setActualPositionOfPersonY(rowIndex);\n        }\n      });\n    });\n  }\n\nconst loadActualLevel = () => {\n  setGameMode(GAME_MODE_INTRO);\n\nconsole.log(\"AAAAAAA\");\n  let gamePlanInString = gameArrayPlans[levelIndex];\n\n  let tempGameMap = gamePlanInString.split(\"\\n\");\n  tempGameMap = tempGameMap.map(rowItem => {\n    return rowItem.split(\"\");\n  });\n\n\n\n  let tempHeight = 0;\n  let tempWidth = 0;\n  setGameMapWidth(tempGameMap[0].length);\n  setGameMapHeight(tempGameMap.length);\n  findpostionOfEnd(tempGameMap);\n  findPositionOfPersonInGameMapAndSetToState(tempGameMap);\n  setGameMap(tempGameMap);\n\n//  useEffect(() => {\n//  console.log(\"XXXXXXXXXXXXXXXX\")\n//     if (levelIndex === 0)\n// //     || (levelIndex === 2) || (levelIndex === 4)\n//    {\n//       setGameMode(GAME_MODE_INTRO)\n//     } else if (levelIndex === 1){\n//       let tempGameMap = gamePlanInString.split(\"\\n\");\n//       tempGameMap = tempGameMap.map(rowItem => {\n//         return rowItem.split(\"\");\n//       });\n//       setGameMap(tempGameMap);\n//       findPositionOfPersonInGameMapAndSetToState(tempGameMap);\n\n//       let tempHeight = 0;\n//       let tempWidth = 0;\n//       setGameMapWidth(tempGameMap[0].length);\n//       setGameMapHeight(tempGameMap.length);\n//       findpostionOfEnd(tempGameMap);\n//       setGameMode(GAME_MODE_PREVIEW)\n//     } else if (levelIndex === 3) {\n//       let tempGameMap = gamePlanInString2.split(\"\\n\");\n//       tempGameMap = tempGameMap.map(rowItem => {\n//         return rowItem.split(\"\");\n//       });\n//       setGameMap(tempGameMap);\n//       findPositionOfPersonInGameMapAndSetToState(tempGameMap);\n\n//       let tempHeight = 0;\n//       let tempWidth = 0;\n//       setGameMapWidth(tempGameMap[0].length);\n//       setGameMapHeight(tempGameMap.length);\n//       findpostionOfEnd(tempGameMap);\n//       setGameMode(GAME_MODE_PREVIEW)\n//     } else if (levelIndex === 5){\n//       let tempGameMap = gamePlanInStringOptional.split(\"\\n\");\n//       tempGameMap = tempGameMap.map(rowItem => {\n//         return rowItem.split(\"\");\n//       });\n//       setGameMap(tempGameMap);\n//       findPositionOfPersonInGameMapAndSetToState(tempGameMap);\n\n//       let tempHeight = 0;\n//       let tempWidth = 0;\n//       setGameMapWidth(tempGameMap[0].length);\n//       setGameMapHeight(tempGameMap.length);\n//       findpostionOfEnd(tempGameMap);\n//       setGameMode(GAME_MODE_PREVIEW)\n//     }else {\n//       return(setGameMode(GAME_MODE_INTRO))\n//     }\n  } \n//  }, [levelIndex]);\nconst runNextLevel = () => {\n  if (positionOfEndX === actualPositionOfPersonX && positionOfEndY === actualPositionOfPersonY){\n    setLevelIndex(levelIndex + 1)\n    document.querySelector(\"#audioEnd\").play();\n  }\n  return\n }\n\n\n  useEffect(() => {\n    loadActualLevel();\n   }, [levelIndex]);\n\n\n// useEffect(() => {\n//   if (positionOfEndX === actualPositionOfPersonX && positionOfEndY === actualPositionOfPersonY){\n\n//     document.querySelector(\"#audioEnd\").play();\n//   }\n//  }, [actualPositionOfPersonX, actualPositionOfPersonY]);\n\n\n//   useEffect(() => {\n//     loadActualLevel();\n//    }, [levelIndex]);\n\n\n  const handleMovePerson = (rowIndexToChecked, cellIndexToChecked, cellItem) => {\n//    console.log({isAllowedMove})\n    if(!isAllowedMove(rowIndexToChecked, cellIndexToChecked, cellItem)) {return;}\n\n    setActualPositionOfPersonX(cellIndexToChecked);\n    setActualPositionOfPersonY(rowIndexToChecked);\n    const newGameMap = gameMap.map((rowItem, rowIndex) => (\n      rowItem.map((cellItem, cellIndex) => {\n        if(rowIndexToChecked === rowIndex && cellIndexToChecked === cellIndex) {\n          return hasPerson;\n          document.querySelector(\"#audioMove\").play();\n\n          } else if (cellItem === \"@\") {return \"#\"} \n          else  {return cellItem} \n      })\n    ));\n   setGameMap(newGameMap);\n\n  }\n\n  const handleMoveUp = (e) => {\n    handleMovePerson(actualPositionOfPersonY - 1, actualPositionOfPersonX, getContentInGameMap(actualPositionOfPersonX, actualPositionOfPersonY - 1));\n  }\n  const handleMoveDown = (e) => {\n    handleMovePerson(actualPositionOfPersonY + 1, actualPositionOfPersonX, getContentInGameMap(actualPositionOfPersonX, actualPositionOfPersonY + 1));\n  }\n  const handleMoveRight = (e) => {\n    handleMovePerson(actualPositionOfPersonY, actualPositionOfPersonX + 1, getContentInGameMap(actualPositionOfPersonX + 1, actualPositionOfPersonY));\n  }\n  const handleMoveLeft = (e) => {\n    handleMovePerson(actualPositionOfPersonY, actualPositionOfPersonX - 1, getContentInGameMap(actualPositionOfPersonX - 1, actualPositionOfPersonY));\n  }\n\n  const isAllowedMove = (rowIndexToChecked, cellIndexToChecked, cellItem, pr) => {\n//    console.log({rowIndexToChecked, cellIndexToChecked, cellItem, positionOfEndX, positionOfEndY,\n//      jsmeNKonci: ( actualPositionOfPersonX === positionOfEndX && actualPositionOfPersonY === positionOfEndY),\n//    })\n//    if ()\n\n    return (\n      isAcceptedDirectToMove(rowIndexToChecked, cellIndexToChecked)\n      && ( cellItem === \"#\" || cellItem === \"X\" )\n      && !( actualPositionOfPersonX === positionOfEndX && actualPositionOfPersonY === positionOfEndY)\n      && (gameMode === GAME_MODE_GAME)\n    );\n  }\n\n  const isAcceptedDirectToMove = (rowIndexToChecked, cellIndexToChecked) => {\n    document.querySelector(\"#audioMove\").play();\n\n    return (\n    (\n        ( actualPositionOfPersonX - 1 === cellIndexToChecked || actualPositionOfPersonX + 1 === cellIndexToChecked )\n        && ( actualPositionOfPersonY === rowIndexToChecked )\n      )\n      || (\n        ( actualPositionOfPersonY - 1 === rowIndexToChecked || actualPositionOfPersonY + 1 === rowIndexToChecked )\n        && ( actualPositionOfPersonX === cellIndexToChecked )\n        )\n  \n      )\n\n  }\n\n\n\n  const setGameModeToPreview = () => {\n    setGameMode(GAME_MODE_PREVIEW);\n  }\n  const setGameModeToGame = () => {\n    setGameMode(GAME_MODE_GAME);\n  }\n\n  const handlePlaySound = (e) => {\n    document.querySelector(\"#audioMove\").play();\n  }\n\n// const timer = setTimeout(() => {\n//       console.log(\"AAAAAAAAAAAAAAAA\");\n//     }, 2000);\n//     return () => clearTimeout(timer);\n\n  // useEffect(() => {\n  //   if(previewMode === false) {\n\n  //   }\n\n    \n  // }, [previewMode]);\n\n  useEffect(() => {\n    if (\n      (gameMode === GAME_MODE_GAME)\n      && !(\n        actualPositionOfPersonX === positionOfEndX\n        && actualPositionOfPersonY === positionOfEndY\n        )\n      && !(levelIndex === lastLevelIndex)\n      ) {\n        setShowGameRestartButton(true);\n//        signRestart = \"Zmáčkni E pro restart bludiště\";\n    }else {\n        setShowGameRestartButton(false);\n    }\n\n }, [gameMode, actualPositionOfPersonY, actualPositionOfPersonX]);\n\n      if (actualPositionOfPersonX === positionOfEndX && actualPositionOfPersonY === positionOfEndY){\n        signNextLevel = \"Zmáčkni R pro další bludiště\";\n    }else {\n        signNextLevel = \" \";\n    }\n\n/*\nconst isAcceptedToMoveWithArrow = (rowIndexToChecked, cellIndexToChecked, rowIndex, arrowUp, cellItem) => {\n\n\n    return (setActualPositionOfPersonY(rowIndex + 1)) (\n        (rowIndex >= 0\n        && (cellItem === \"#\" || cellItem === \"@\" || cellItem === \"X\"))\n      )\n  }\n  //return (<div>aaaaa</div>)\n*/\n\n//if (tempGameMap === gamePlanInStringOptional) {\n//  gameOverSign = \"Game Over\"\n//}\n  console.log(levelIndex, gameMode)\n\n  return (\n    <div className=\"App\">\n      <Hotkeys keyName=\"up,w\" onKeyDown={handleMoveUp} />\n      <Hotkeys keyName=\"down,s\" onKeyDown={handleMoveDown} />\n      <Hotkeys keyName=\"right,d\" onKeyDown={handleMoveRight} />\n      <Hotkeys keyName=\"left,a\" onKeyDown={handleMoveLeft} />\n      <Hotkeys keyName=\"r\" onKeyDown={runNextLevel} />\n\n      <p>{gameOverSign}</p>\n\n      \n      {gameMode === GAME_MODE_INTRO && <Intro\n            {...{levelIndex, setGameModeToPreview}}\n          />}\n      {gameMode === GAME_MODE_PREVIEW && <PreviewMap\n            {...{gameMap, handleMovePerson, gameMapHeight, gameMapWidth, gameMode, setGameModeToGame}}\n          />}\n      {gameMode === GAME_MODE_GAME && <ActionMap\n            {...{levelIndex, gameMap, actualPositionOfPersonX, actualPositionOfPersonY, gameMapWidth, gameMapHeight}}\n          />\n      }\n\n\n              {showGameRestartButton && <p>Zmáčkni E pro restart bludiště</p>}\n\n              <p><strong>{signNextLevel}</strong></p>\n              <p><a href=\"https://teo.jacon.cz/index.php/9905\">zpet na uvodni stranku</a></p>\n\n\n            <audio src=\"move.mp3\" id=\"audioMove\" />\n            <audio src=\"end.mp3\" id=\"audioEnd\" />\n    </div>\n  );\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}