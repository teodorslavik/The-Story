{"version":3,"sources":["Room.js","PreviewMap.js","ActionMap.js","Intro.js","App.js","serviceWorker.js","index.js"],"names":["HorizontalWithoutDoor","HorizontalWithDoor","VerticalWithoutDoor","VerticalWithDoor","PlayerInRoom","PlayerIsNotInRoom","NotRoom","TreasureRoom","LavaRoom","PlayerInLava","EnemyInRoom","Room","roomItem","gameMap","gameMapWidth","gameMapHeight","northRoomPositionX","actualPositionOfPlayerX","actualPositionOfPlayerY","positionOfLavaX","positionOfLavaY","tempGameMap","findPositionOfDeadlyLava","setGameMap","positionX","northRoomPositionY","positionY","southRoomPositionX","southRoomPositionY","eastRoomPositionX","eastRoomPositionY","westRoomPositionX","westRoomPositionY","hasDoorInNorth","hasDoorInSouth","hasDoorInEast","hasDoorInWest","isRoom","content","map","rowItem","rowIndex","cellItem","cellIndex","className","style","display","PreviewMap","props","handleMovePerson","setGameModeToGame","setPrewiewMode","prewiewMode","useEffect","timer","setTimeout","clearTimeout","key","onClick","e","ActionMap","levelIndex","actualPositionOfPersonX","actualPositionOfPersonY","Intro","setGameModeToPreview","App","useState","setActualPositionOfPersonX","setActualPositionOfPersonY","undefined","actualPositionOfEnemyX","setActualPositionOfEnemyX","actualPositionOfEnemyY","setActualPositionOfEnemyY","setGameMapWidth","setGameMapHeight","positionOfEndX","setPositionOfEndX","positionOfEndY","setPositionOfEndY","gameIsOver","setGameIsOver","lavasArray","setLavasArray","setLevelIndex","gameMode","setGameMode","showGameRestartButton","setShowGameRestartButton","gameOverSign","setGameOverSign","diedInLavaSign","signNextLevel","gameArrayPlans","getContentInGameMap","whereX","whereY","ret","loadActualLevel","split","length","findpostionOfEnd","findPositionOfPersonInGameMapAndSetToState","findPositionOfEnemyInGameMapAndSetToState","getLavasMap","rowIndexToChecked","cellIndexToChecked","isAllowedMove","newGameMap","document","querySelector","play","console","log","some","lavaItem","tempLavasMap","push","pr","isAcceptedDirectToMove","keyName","onKeyDown","href","src","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.687a91ac.chunk.js","sourcesContent":["import React from 'react';\n\t\nimport './App.css';\n\nfunction Room({roomItem, gameMap, gameMapWidth, gameMapHeight, actualPositionOfPlayerX, actualPositionOfPlayerY, positionOfLavaX, positionOfLavaY, tempGameMap, findPositionOfDeadlyLava, setGameMap}) {\n\n\t// zjistit vlastnosti mistnost\n\t// kde jsou dvere?\n\nconst northRoomPositionX = roomItem.positionX;\nconst northRoomPositionY = roomItem.positionY - 1;\n\nconst southRoomPositionX = roomItem.positionX;\nconst southRoomPositionY = roomItem.positionY + 1;\n\nconst eastRoomPositionX = roomItem.positionX + 1;\nconst eastRoomPositionY = roomItem.positionY;\n\nconst westRoomPositionX = roomItem.positionX - 1;\nconst westRoomPositionY = roomItem.positionY;\n\n\n\tlet hasDoorInNorth = false;\n\tlet hasDoorInSouth = false;\n\tlet hasDoorInEast = false;\n\tlet hasDoorInWest = false;\n\t\n\t\n\tconst imRoomAndSetToMeDoors = () => {\n\t\tgameMap.map((rowItem, rowIndex) => {\n\t\t\trowItem.map((cellItem, cellIndex) => {\n\t\t\t\tif (\n\t\t\t\t\trowIndex === northRoomPositionY\n\t\t\t\t\t&& cellIndex === northRoomPositionX\n\t\t\t\t\t&& isRoom(cellItem)\n\t\t\t\t\t&& rowIndex >= 0\n\t\t\t\t){\n\t\t\t\t\thasDoorInNorth = true;\n\t\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\trowIndex === southRoomPositionY\n\t\t\t\t\t&& cellIndex === southRoomPositionX\n\t\t\t\t\t&& isRoom(cellItem) \n\t\t\t\t\t&& rowIndex <= gameMapHeight\n\t\t\t\t){\n\t\t\t\t\thasDoorInSouth = true;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\trowIndex === eastRoomPositionY\n\t\t\t\t\t&& cellIndex === eastRoomPositionX\n\t\t\t\t\t&& isRoom(cellItem)\n\t\t\t\t\t&& cellIndex <= gameMapWidth\n\t\t\t\t){\n\t\t\t\t\thasDoorInEast = true;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\trowIndex === westRoomPositionY\n\t\t\t\t\t&& cellIndex === westRoomPositionX\n\t\t\t\t\t&& isRoom(cellItem)\n\t\t\t\t\t&& cellIndex >= 0\n\t\t\t\t){\n\t\t\t\t\thasDoorInWest = true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t}\n\n\tconst isRoom = (content) => {\n\t\tif(content !== \" \") {\n\t\t\treturn true\n\t\t} else { return false}\n\t};\n\n\tif (roomItem.content !== \" \") {imRoomAndSetToMeDoors()}\n\telse {}\n\t\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"noWrap\">\n\t\t\t\t{hasDoorInNorth ? <HorizontalWithDoor /> : <HorizontalWithoutDoor />}\n\t\t\t</div>\n\t\t\t<div style={{display: \"flex\", }}>\n\t\t\t\t<span className=\"noWrap\">\n\t\t\t\t\t{hasDoorInWest ? <VerticalWithDoor /> : <VerticalWithoutDoor />}\n\t\t\t\t</span>\n\t\t\t\t<span className=\"noWrap\">\n\t\t\t\t\t{\n\t\t\t\t\t\t(roomItem.content === \"@\") ? <PlayerInRoom /> \n\t\t\t\t\t\t: (roomItem.content === \"†\") ? <PlayerInLava />\n\t\t\t\t\t\t: (roomItem.content === \"#\") ? <PlayerIsNotInRoom />\n\t\t\t\t\t\t: (roomItem.content === \"X\") ? <TreasureRoom />\n\t\t\t\t\t\t: (roomItem.content === \"~\") ? <LavaRoom />\n\t\t\t\t\t\t: (roomItem.content === \"!\") ? <EnemyInRoom />\n\t\t\t\t\t\t: <NotRoom />\n\t\t\t\t\t}\n\t\t\t\t</span>\n\t\t\t\t<span className=\"noWrap\">\n\t\t\t\t\t{hasDoorInEast ? <VerticalWithDoor /> : <VerticalWithoutDoor />}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{hasDoorInSouth ? <HorizontalWithDoor /> : <HorizontalWithoutDoor />}\n\t\t\t</div>\n{/*\n\t\t\t{roomItem.content},<br />\n\t\t\tpozice mistnosti: {roomItem.positionX}, {roomItem.positionY}<br />\n\t\t\tpozice mistnosti na severu: {northRoomPositionX}, {northRoomPositionY}<br />\n\t\t\t<strong>mam na severu dvere? {hasDoorInNorth ? <span>ano</span> : <span>ne</span>}</strong><br />\n\t\t\tmam na jihu dvere? {hasDoorInSouth ? <span>ano</span> : <span>ne</span>}<br />\n\t\t\tmam na vychodu dvere? {hasDoorInEast ? <span>ano</span> : <span>ne</span>}<br />\n\t\t\tmam na zapade dvere? {hasDoorInWest ? <span>ano</span> : <span>ne</span>}\n*/}\n\n\t\t</div>\n\n\t)\n\n}\n\nfunction HorizontalWithoutDoor (){\n\treturn (<>###############</>);\n}\nfunction HorizontalWithDoor (){\n\treturn (<>#####<em>.....</em>#####</>);\n}\nfunction VerticalWithoutDoor (){\n\treturn (<>#<br />\n#<br />\n#<br />\n#<br />\n#</>);\n}\nfunction VerticalWithDoor (){\n\treturn (<>#<br />\n<em>.<br />\n.<br />\n.</em><br />\n#</>);\n}\nfunction PlayerInRoom (){\n\treturn (<><em>.............</em><br />     \n<em>......</em>o<em>......</em><br />\n<em>.....</em>-|-<em>.....</em><br />\n<em>.....</em>/<em>.</em>\\<em>.....</em><br />\n<em>.............</em></>);\n}\nfunction PlayerIsNotInRoom (){\n\treturn (<><em>.............<br />\n.............<br />\n.............<br />\n.............<br />\n.............</em></>);\n}\nfunction NotRoom (){\n\treturn (<>#############<br />     \n#############<br />\n#############<br />\n#############<br />\n#############</>);\n}\nfunction TreasureRoom (){\n\treturn (<><em>.............</em><br />     \n<em>.....</em>xxx<em>.....</em><br />\n<em>.....</em>xXx<em>.....</em><br />\n<em>.....</em>xxx<em>.....</em><br />\n<em>.............</em></>);\n}\nfunction LavaRoom (){\n\treturn (<><rtd><strong>~~~~~~~~~~~~~<br />\n~~~~~~~~~~~~~<br />\n~~~~~~~~~~~~~<br />\n~~~~~~~~~~~~~<br />\n~~~~~~~~~~~~~<br /></ strong></rtd></>);\n}\nfunction PlayerInLava (){\n\treturn (<><rtd>~~~~~~~~~~~~~<br />\n~~~~~~o~~~~~~<br />\n~~~~~-|-~~~~~<br />\n~~~~~/~\\~~~~~<br />\n~~~~~~~~~~~~~<br /></rtd></>);\n}\nfunction EnemyInRoom (){\n\treturn (<><rtd><em>..</em>nepritel!<em>..</em><br />\n<em>......</em>o<em>.</em>|<em>....</em><br />\n<em>.....</em>-|-+<em>....</em><br />\n<em>.....</em>/<em>.</em>\\<em>.....</em><br />\n<em>.............</em><br /></rtd></>);\n}\n\n\n\t\nexport default Room;","import React,  {useState, useEffect} from 'react';\nimport Room from './Room';\n\n\nfunction PreviewMap(props) {\n\n\tconst gameMap = props.gameMap;\n\tconst handleMovePerson = props.handleMovePerson;\n\tconst gameMapWidth = props.gameMapWidth;\n\tconst gameMapHeight = props.gameMapHeight;\n\tconst setPrewiewMode = props.setPrewiewMode\n\tconst prewiewMode = props.prewiewMode\n\tconst setGameModeToGame = props.setGameModeToGame\n//\t        <button onClick={handleChangeToActionMap}>ZAČÍT</button>\n\n\nuseEffect(() => {\n   const timer = setTimeout(() => {\n\tsetGameModeToGame();\n   }, 1400);\n   return () => clearTimeout(timer);\n  }, []);\n\n\n\n\treturn (\n\t\t<div>\n\t        <table>\n\t          <tbody>\n\t            {gameMap.map((rowItem, rowIndex) => (<tr key={rowIndex}>\n\t              {rowItem.map((cellItem, cellIndex) => (\n\t                <td\n\t                  key={cellIndex}\n\t                  onClick={e=>handleMovePerson(rowIndex, cellIndex, cellItem)}\n\t                >\n\t                  <Room\n\t                    roomItem={{\n\t                      content: cellItem,\n\t                      positionX: cellIndex,\n\t                      positionY: rowIndex,\n\t                    }}\n\t                    {...{gameMap, gameMapWidth, gameMapHeight}}\n\t                  />\n\t                </td>\n\t              ))}\n\t            </tr>\n\t            ))}\n\t          </tbody>\n\t        </table>\n\t        <button onClick={setGameModeToGame}>ZAČÍT</button>\n\n    \t</div>\n\t);\n}\n\nexport default PreviewMap;","import React,  {useState, useEffect} from 'react';\nimport Room from './Room';\n\nfunction ActionMap(props) {\n  const levelIndex = props.levelIndex;\n  const gameMap = props.gameMap;\n  const actualPositionOfPersonX = props.actualPositionOfPersonX;  \n  const actualPositionOfPersonY = props.actualPositionOfPersonY;\n  const gameMapWidth = props.gameMapWidth;\n  const gameMapHeight = props.gameMapHeight;\n\n\n  return (<>\n\t   <p><strong>Bludiště {levelIndex + 1}</strong></p>\n      {gameMap.map((rowItem, rowIndex) => (<div key={rowIndex}>\n        {rowItem.map((cellItem, cellIndex) => (\n          (actualPositionOfPersonX === cellIndex && actualPositionOfPersonY === rowIndex)\n          ? \n            <Room\n              key={cellIndex}\n              roomItem={{\n                content: cellItem,\n                positionX: cellIndex,\n                positionY: rowIndex,\n              }}\n              {...{gameMap, gameMapWidth, gameMapHeight}}\n            />\n\n          : null\n        ))}\n\n\n      </div>   \n      ))}\n\n    </>);\n}\n\n\nexport default ActionMap;\n\n\n\n/*\n\n      {gameMap.map((rowItem, rowIndex) => (<div key={rowIndex}>\n        {rowItem.map((cellItem, cellIndex) => (\n          (actualPositionOfPersonX === cellIndex && actualPositionOfPersonY === rowIndex)\n          ? \n            <Room\n              key={cellIndex}\n              roomItem={{\n                content: cellItem,\n                positionX: cellIndex,\n                positionY: rowIndex,\n              }}\n              {...{gameMap, gameMapWidth, gameMapHeight}}\n            />\n\n          : null\n        ))}\n\n*/","import React,  {useState, useEffect} from 'react';\nimport Room from './Room';\n\nfunction Intro(props) {\n\tconst levelIndex = props.levelIndex;\n\tconst setGameModeToPreview = props.setGameModeToPreview;\n//\t\t\t<p>Zmáčkni START pro začátek hry</p>\n\n\treturn(\n\t\t<div>\n\t\t\t<p>Výtej ve hře BLUDIŠTĚ, <br /> po zmáčknutí tlačítka START začne hra. <br /> Máš trochu času na zapamatování mapy.<br />Cíl jsou <u>křížky</u>.<br /><strong>Hodně štěstí</strong></p>\n\n\t\t\t<p>Level {levelIndex + 1}</p>\n\t\t\t<button onClick={setGameModeToPreview}>START</button>\n\t\t</div>\n\t\t);\n}\n\nexport default Intro;","import React,  {useState, useEffect} from 'react';\nimport './App.css';\nimport Room from './Room';\nimport PreviewMap from './PreviewMap';\nimport ActionMap from './ActionMap';\nimport Intro from './Intro';\n\nimport Hotkeys from 'react-hot-keys';\n\n\nconst GAME_MODE_INTRO = \"INTRO\"; // zobrazeni informaci a play tlacitka\nconst GAME_MODE_PREVIEW = \"PREVIEW\"; // zobrazeni cele mapy\nconst GAME_MODE_GAME = \"GAME\"; // samotna hra\n\nfunction App() {\n  const isEmpty = \" \";\n  const hasPerson = \"@\";\n  const theEnd = \"X\"\n  const path = \"#\"\n  const lava = \"~\"\n  const enemy = \"!\"  \n\n\n  \n  const [gameMap, setGameMap] = useState([[]]);\n  const [actualPositionOfPersonX, setActualPositionOfPersonX] = useState(0);\n  const [actualPositionOfPersonY, setActualPositionOfPersonY] = useState(0);\n\n  const [actualPositionOfEnemyX, setActualPositionOfEnemyX] = useState(undefined);\n  const [actualPositionOfEnemyY, setActualPositionOfEnemyY] = useState(undefined);\n  const [randomNumber, setRandomNumber] = useState(null);\n\n  const [gameMapWidth, setGameMapWidth] = useState(undefined);\n  const [gameMapHeight, setGameMapHeight] = useState(undefined);\n  const [positionOfEndX, setPositionOfEndX] = useState(null);\n  const [positionOfEndY, setPositionOfEndY] = useState(null);\n  const [gameIsOver, setGameIsOver] = useState(false);\n  const [positionOfLavaX, setPositionOfLavaX] = useState(null);\n  const [positionOfLavaY, setPositionOfLavaY] = useState(null);\n  const [lavasArray, setLavasArray] = useState([]);\n  const [levelIndex, setLevelIndex] = useState(0);\n  const [gameMode, setGameMode] = useState(GAME_MODE_INTRO);\n  const [showGameRestartButton, setShowGameRestartButton] = useState(false);\n  const [gameOverSign, setGameOverSign]= useState(false);\n  const [diedInLavaSign, setDiedInLavaSign] = useState(false);\n  let signNextLevel = \" \";\n//document.querySelector(\"#audioMove\").play();\n\n// const gameArrayPlans = [\n// `##@\n// # X`,\n// `@~ ###\n// #### X`,\n// `@`\n// ];\n\nconst gameArrayPlans = [\n// `#@#\n// #X#\n// ###`,\n`##@\n# X`,\n`@# ###\n#### X`,\n`##@##\n  # #\n  #  \n  ###\n X#  `,\n`#@ X\n~###`,\n`#@~#X\n###~#\n ####\n#####`,\n`@`\n];\n\nfunction randomInt(min, max) {\n  return min + Math.floor((max - min) * Math.random());\n}\n\nconst getContentInGameMap = (whereX, whereY) => {\n   let ret = isEmpty;\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n        if (whereX === cellIndex && whereY === rowIndex){\n          ret = cellItem;\n        }\n      });\n    });\n\n    return ret;\n  }\n\n\n    const findpostionOfEnd = (gameMap) => {\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n\n        if(cellItem === \"X\") {\n          setPositionOfEndX(cellIndex);\n          setPositionOfEndY(rowIndex);\n        }\n      });\n    });\n  }\n\n  const findPositionOfPersonInGameMapAndSetToState = (gameMap) => {\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n        if(cellItem === \"@\") {\n          setActualPositionOfPersonX(cellIndex);\n          setActualPositionOfPersonY(rowIndex);\n        }\n      });\n    });\n  }\n\n  const findPositionOfEnemyInGameMapAndSetToState = (gameMap) => {\n    gameMap.map((rowItem, rowIndex) => {\n      rowItem.map((cellItem, cellIndex) => {\n        if(cellItem === \"!\") {\n          setActualPositionOfEnemyX(cellIndex);\n          setActualPositionOfEnemyY(rowIndex);\n        }\n      });\n    });\n  }\n\nconst loadActualLevel = () => {\n  setGameIsOver(false);\n  setGameMode(GAME_MODE_INTRO);\n\n//console.log(\"AAAAAAA\");\n  let gamePlanInString = gameArrayPlans[levelIndex];\n\n  let tempGameMap = gamePlanInString.split(\"\\n\");\n  tempGameMap = tempGameMap.map(rowItem => {\n    return rowItem.split(\"\");\n  });\n\n\n\n  let tempHeight = 0;\n  let tempWidth = 0;\n  setGameMapWidth(tempGameMap[0].length);\n  setGameMapHeight(tempGameMap.length);\n  findpostionOfEnd(tempGameMap);\n//  findPositionOfDeadlyLava(tempGameMap);\n  findPositionOfPersonInGameMapAndSetToState(tempGameMap);\n  findPositionOfEnemyInGameMapAndSetToState(tempGameMap);\n  setGameMap(tempGameMap);\n  getLavasMap(tempGameMap);\n}\n\nconst runNextLevel = () => {\n  setGameIsOver(false);\n  if (positionOfEndX === actualPositionOfPersonX && positionOfEndY === actualPositionOfPersonY){\n    setLevelIndex(levelIndex + 1)\n  }\n  return\n }\n\n   useEffect(() => {\n     loadActualLevel();\n    }, [levelIndex]);\n\n  const handleMovePerson = (rowIndexToChecked, cellIndexToChecked, cellItem) => {\n    if(!isAllowedMove(rowIndexToChecked, cellIndexToChecked, cellItem)) {return;}\n    const newGameMap = gameMap.map((rowItem, rowIndex) => (\n      rowItem.map((cellItem, cellIndex) => {\n        if(rowIndexToChecked === rowIndex && cellIndexToChecked === cellIndex) {\n          return hasPerson;\n\n          }\n           else if (cellItem === \"@\") {return \"#\"}\n           else  {return cellItem} \n      })\n    ));\n   setGameMap(newGameMap);\n   setActualPositionOfPersonX(cellIndexToChecked);\n   setActualPositionOfPersonY(rowIndexToChecked);\n   document.querySelector(\"#audioMove\").play();\n\n  }\n\n  const findDirectWayToPlayer = () => {\n    if (actualPositionOfPersonX === actualPositionOfEnemyX && actualPositionOfPersonY < actualPositionOfEnemyY) {\n      console.log(\"s\");\n      return \"s\";\n    } else if (actualPositionOfPersonX > actualPositionOfEnemyX && actualPositionOfPersonY === actualPositionOfEnemyY) {\n      console.log(\"v\");\n      return \"v\";\n    } else if (actualPositionOfPersonX === actualPositionOfEnemyX && actualPositionOfPersonY > actualPositionOfEnemyY) {\n      console.log(\"j\")\n      return \"j\";\n    } else if (actualPositionOfPersonX < actualPositionOfEnemyX && actualPositionOfPersonY === actualPositionOfEnemyY) {\n      console.log(\"z\")\n      return \"z\";\n    } else if ((actualPositionOfPersonX > actualPositionOfEnemyX) && (actualPositionOfPersonY < actualPositionOfEnemyY)) {\n      console.log(\"sv\");\n      return \"sv\";\n    } else if ((actualPositionOfPersonX > actualPositionOfEnemyX) && (actualPositionOfPersonY > actualPositionOfEnemyY)) {\n      console.log(\"jv\");\n      return \"jv\";\n    } else if ((actualPositionOfPersonX < actualPositionOfEnemyX) && (actualPositionOfPersonY > actualPositionOfEnemyY)) {\n      console.log(\"jz\");\n      return \"jz\";\n    } else if ((actualPositionOfPersonX < actualPositionOfEnemyX) && (actualPositionOfPersonY < actualPositionOfEnemyY)) {\n      console.log(\"sz\");\n      return \"sz\";\n    }\n  }\n/*\n  const getNewPositionForEnemy = () => {\n    const whereIsPlayer = findDirectWayToPlayer();\n\n    let newPositionX = actualPositionOfEnemyX;\n    let newPositionY = actualPositionOfEnemyY;\n    if (whereIsPlayer === \"s\") {\n      newPositionY = newPositionY - 1;\n      console.log(\"chci na sever\");\n    } else if (whereIsPlayer === \"v\") {\n      newPositionX = newPositionX + 1;\n      console.log(\"chci na vychod\");\n    } else if (whereIsPlayer === \"j\") {\n      newPositionY = newPositionY + 1;\n      console.log(\"chci na jih\");\n    } else if (whereIsPlayer === \"z\") {\n      newPositionX = newPositionX - 1;\n      console.log(\"chci na zapad\");\n    } else if (whereIsPlayer === \"sv\") {\n      setRandomNumber = randomInt(1, 2);\n      if (randomNumber === 1) {\n        newPositionX = newPositionX + 1;\n        console.log(\"chci na v\");\n      } else {\n        newPositionY = newPositionY - 1;\n        console.log(\"chci na s\");\n      }\n    } else if (whereIsPlayer === \"jv\") {\n      setRandomNumber = randomInt(1, 2);\n      if (randomNumber === 1) {\n        newPositionX = newPositionX + 1;\n        console.log(\"chci na v\");\n      } else {\n        newPositionY = newPositionY + 1;\n        console.log(\"chci na j\");\n      }\n    } else if (whereIsPlayer === \"jz\"); {\n      setRandomNumber = randomInt(1, 2);\n      if (randomNumber === 1) {\n        newPositionX = newPositionX - 1;\n        console.log(\"chci na z\");\n      } else {\n        newPositionY = newPositionY + 1;\n        console.log(\"chci na j\");\n      }\n    } else if (whereIsPlayer === \"sz\") {\n      setRandomNumber = randomInt(1, 2);\n      if (randomNumber === 1) {\n        newPositionX = newPositionX - 1;\n        console.log(\"chci na z\");\n      } else {\n        newPositionY = newPositionY - 1;\n        console.log(\"chci na s\");\n    }\n  }\n\n*/\n\n\n\n  console.log({gameMap, actualPositionOfEnemyX, actualPositionOfEnemyY})\n\nuseEffect(() => {\n    const isPersonInLava = lavasArray.some(lavaItem => (\n      lavaItem.cellIndex === actualPositionOfPersonX\n      && lavaItem.rowIndex === actualPositionOfPersonY\n    )); \n\n    if (isPersonInLava) {\n        setGameIsOver(true);\n        const tempGameMap = gameMap.map((rowItem, rowIndex) => (\n          rowItem.map((cellItem, cellIndex) => {\n            if (cellItem === \"@\") {\n              return \"†\";\n            } else {return cellItem;}\n          })         \n        ));\n        setGameMap(tempGameMap);\n\n    }\n  }, [actualPositionOfPersonX, actualPositionOfPersonY]);\nconst getLavasMap = (gameMap) => {\n  let tempLavasMap = [];\n  gameMap.map((rowItem, rowIndex) => {\n    rowItem.map((cellItem, cellIndex) => {\n      if (cellItem === \"~\") {\n        tempLavasMap.push({cellIndex, rowIndex});\n      }\n\n    });\n  });\nsetLavasArray(tempLavasMap);\n}\n\n\n// const isLavaInPosition = (positionX, positionY, lavasArray) => {\n  \n// }\n  const handleMoveUp = (e) => {\n    if(gameIsOver) {return;}\n    handleMovePerson(actualPositionOfPersonY - 1, actualPositionOfPersonX, getContentInGameMap(actualPositionOfPersonX, actualPositionOfPersonY - 1));\n  }\n  const handleMoveDown = (e) => {\n    if(gameIsOver) {return;}\n    handleMovePerson(actualPositionOfPersonY + 1, actualPositionOfPersonX, getContentInGameMap(actualPositionOfPersonX, actualPositionOfPersonY + 1));\n  }\n  const handleMoveRight = (e) => {\n    if(gameIsOver) {return;}\n    handleMovePerson(actualPositionOfPersonY, actualPositionOfPersonX + 1, getContentInGameMap(actualPositionOfPersonX + 1, actualPositionOfPersonY));\n  }\n  const handleMoveLeft = (e) => {\n    if(gameIsOver) {return;}\n    handleMovePerson(actualPositionOfPersonY, actualPositionOfPersonX - 1, getContentInGameMap(actualPositionOfPersonX - 1, actualPositionOfPersonY));\n  }\n\n  const isAllowedMove = (rowIndexToChecked, cellIndexToChecked, cellItem, pr) => {\n      document.querySelector(\"#audioMove\").play();\n    return (\n      isAcceptedDirectToMove(rowIndexToChecked, cellIndexToChecked)\n      && ( cellItem === \"#\" || cellItem === \"X\" || cellItem === \"~\" || cellItem === \"!\")\n      && !( actualPositionOfPersonX === positionOfEndX && actualPositionOfPersonY === positionOfEndY)\n      && !( actualPositionOfPersonX === positionOfLavaX && actualPositionOfPersonY === positionOfLavaY)\n      && (gameMode === GAME_MODE_GAME)\n    );\n  }\n\n  const isAcceptedDirectToMove = (rowIndexToChecked, cellIndexToChecked) => {\n\n    return (\n    (\n        ( actualPositionOfPersonX - 1 === cellIndexToChecked || actualPositionOfPersonX + 1 === cellIndexToChecked )\n        && ( actualPositionOfPersonY === rowIndexToChecked )\n      )\n      || (\n        ( actualPositionOfPersonY - 1 === rowIndexToChecked || actualPositionOfPersonY + 1 === rowIndexToChecked )\n        && ( actualPositionOfPersonX === cellIndexToChecked )\n        )\n  \n      )\n\n  }\n\n  const setGameModeToPreview = () => {\n    setGameMode(GAME_MODE_PREVIEW);\n  }\n  const setGameModeToGame = () => {\n    setGameMode(GAME_MODE_GAME);\n  }\n\n  const handlePlaySound = (e) => {\n    document.querySelector(\"#audioMove\").play();\n  }\n\n  useEffect(() => {\n    if (\n      (gameMode === GAME_MODE_GAME)\n      && !(\n        actualPositionOfPersonX === positionOfEndX\n        && actualPositionOfPersonY === positionOfEndY\n        )\n      && !(levelIndex === gameArrayPlans.length)\n      ) {\n        setShowGameRestartButton(true);\n//        signRestart = \"Zmáčkni E pro restart bludiště\";\n    }else {\n        setShowGameRestartButton(false);\n    }\n\n }, [gameMode, actualPositionOfPersonY, actualPositionOfPersonX]);\n\n      if (actualPositionOfPersonX === positionOfEndX && actualPositionOfPersonY === positionOfEndY){\n        signNextLevel = \"Zmáčkni R pro další bludiště\";\n        document.querySelector(\"#audioEnd\").play();\n    }else {\n        signNextLevel = \" \";\n    }\n  // useEffect(() => {\n  //   console.log(\"skoro\")\n  //     if (actualPositionOfPersonX === positionOfLavaX && actualPositionOfPersonY === positionOfLavaY) {\n  //       setDiedInLavaSign(true)\n  //       console.log(\"BbBBBBBBBBB\")\n  //   }else {\n  //       setDiedInLavaSign(false)\n  //   }\n  //     }, [actualPositionOfPersonX, actualPositionOfPersonY]);\n\nuseEffect(() => {\n    if ((levelIndex + 1 === gameArrayPlans.length) && (gameMode === GAME_MODE_GAME)) {\n  setGameOverSign(true) \n}\n   }, [gameMode]);\n\n\n//      <Hotkeys keyName=\"k\" onKeyDown={getNewPositionForEnemy} />\n  return (\n    <div className=\"App\">\n      <Hotkeys keyName=\"up,w\" onKeyDown={handleMoveUp} />\n      <Hotkeys keyName=\"down,s\" onKeyDown={handleMoveDown} />\n      <Hotkeys keyName=\"right,d\" onKeyDown={handleMoveRight} />\n      <Hotkeys keyName=\"left,a\" onKeyDown={handleMoveLeft} />\n      <Hotkeys keyName=\"e\" onKeyDown={loadActualLevel} />\n      <Hotkeys keyName=\"r\" onKeyDown={runNextLevel} />\n      <Hotkeys keyName=\"l\" onKeyDown={findDirectWayToPlayer} />\n      \n      {gameMode === GAME_MODE_INTRO && <Intro\n            {...{levelIndex, setGameModeToPreview}}\n          />}\n      {gameMode === GAME_MODE_PREVIEW && <PreviewMap\n            {...{gameMap, handleMovePerson, gameMapHeight, gameMapWidth, gameMode, setGameModeToGame}}\n          />}\n      {gameMode === GAME_MODE_GAME && <ActionMap\n            {...{levelIndex, gameMap, actualPositionOfPersonX, actualPositionOfPersonY, gameMapWidth, gameMapHeight}}\n          />\n      }\n              {diedInLavaSign && <p><strong>Uhořel jsi v lávě</strong></p>}\n              {gameOverSign && <p><strong>No Výborně, <br /> dohrál jsi mou hru.</strong></p>}\n              {showGameRestartButton && <p>Zmáčkni E pro restart bludiště</p>}\n              <p><strong>{signNextLevel}</strong></p>\n              <p><a href=\"https://teo.jacon.cz/index.php/9905\">zpet na uvodni stranku</a></p>\n\n\n            <audio src=\"move.mp3\" id=\"audioMove\" />\n            <audio src=\"end.mp3\" id=\"audioEnd\" />\n    </div>\n  );\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}